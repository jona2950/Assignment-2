package HeroDescendants;

import java.util.HashSet;
import java.util.Random;
import java.util.Set;

/**
 * @author Jonathan Fachola	
 * @date Feburary, 6 2015
 * A subclass of Hero with an improvement added
 * to generate ability powers and displaying name 
 */

public class SuperHero extends Hero {

	//Instance variable(s) //Static?
	private String[] superPowers = new String[3];
	
	/**
	 *Constants for available attacks using enum
	 *Can give the string value of any element and/or generate list of
	 *attacks of given amount wanted
	 */
	public enum abilityPowers
	{ 
		//Elements of enum abilityPowers with String value corresponding to name
		SUPERSPEED 		("Super Speed"),
		SUPERSTRENGTH 	("Super Strength"),
		BODYARMOUR 		("Body Armour"),
		FLIGHT 			("Flight"),
		FIREGENERATION	("Fire Generation"),
		WEATHERCONTROL	("Weather Control");
		
		/**
		 * Constructor of enum with specified String value
		 * @param attack, parameter each element is required to have of String object type 
		 */
		private final String attack;
		abilityPowers(String attack) {
			this.attack = attack;
		}
		
		//returns the String value of abilityPowers element
		String n() { return attack; }
		
		/**
		 * Generates a list of attacks with no duplications
		 * @param length, limit of attacks generated 
		 * @return a String array containing attack string values 
		 */
		public static String[] uniqueGenerator(int length)
		{
			//array to temporarily store attacks generated
			String[] list = new String[length];
			/**
			 * Set cannot contain duplicate elements as it is an extension of Collection
			 * Set polymorphed with HashSet for a quick check of elements  
			 */
			Set<Integer> attacks = new HashSet<Integer>();

			int i= 0;
			while (i < list.length)
			{
				/**
				 * RNG (random number generator), generates a value every time looped
				 * with a limited range dependent on counts of elements in abilityPower enum
				 */
				int RNG = (int) (Math.random() * values().length);
				if (!attacks.contains(RNG))
				{ //If statement checks if RNG value was previously generated by using .contains 
					attacks.add(RNG); //adds value for record purpose
					list[i] = values()[RNG].n().toString(); 
					
					i++;
				}

			}
		
			return list;	
		}
	}
	
	/**
	 * Constructor of SuperClass requires matching params as the one in its parent class
	 * @param name, of the SuperHero's name and passed to superclass, hero
	 */
	public SuperHero(String name) {
		super(name);
		
		generateRandomPowers();

	}

	/**
	 * With the help of a method in abilityPowers enum, 
	 * generateRandomPowers can assign the returned array from enum to superPowers array
	 */
	private void generateRandomPowers() {
		// TODO Auto-generated method stub
		superPowers = abilityPowers.uniqueGenerator(superPowers.length);

	}

	/**
	 * Displays the super powers of SuperHero
	 */
	public void showPowers()
	{
		//loop variable to count amount of times looped
		int counter = 0;
		do {
			System.out.println(superPowers[counter]);
			counter++;
		} while (counter < superPowers.length);
	}
	

}
